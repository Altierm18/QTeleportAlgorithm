// <auto-generated>
#pragma warning disable 1591
using System;
using Microsoft.Quantum.Core;
using Microsoft.Quantum.Intrinsic;
using Microsoft.Quantum.Simulation.Core;

[assembly: CallableDeclaration("{\"Kind\":{\"Case\":\"Operation\"},\"QualifiedName\":{\"Namespace\":\"QuantumComputing\",\"Name\":\"HelloQ\"},\"Attributes\":[],\"SourceFile\":\"c:/Users/Marco%20A/Desktop/Projects/QuantumComputing/Operations.qs\",\"Position\":{\"Item1\":6,\"Item2\":4},\"SymbolRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":17}},\"ArgumentTuple\":{\"Case\":\"QsTuple\",\"Fields\":[[]]},\"Signature\":{\"TypeParameters\":[],\"ArgumentType\":{\"Case\":\"UnitType\"},\"ReturnType\":{\"Case\":\"UnitType\"},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}}},\"Documentation\":[]}")]
[assembly: SpecializationDeclaration("{\"Kind\":{\"Case\":\"QsBody\"},\"TypeArguments\":{\"Case\":\"Null\"},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}},\"Parent\":{\"Namespace\":\"QuantumComputing\",\"Name\":\"HelloQ\"},\"Attributes\":[],\"SourceFile\":\"c:/Users/Marco%20A/Desktop/Projects/QuantumComputing/Operations.qs\",\"Position\":{\"Item1\":6,\"Item2\":4},\"HeaderRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":17}},\"Documentation\":[]}")]
[assembly: CallableDeclaration("{\"Kind\":{\"Case\":\"Operation\"},\"QualifiedName\":{\"Namespace\":\"QuantumComputing\",\"Name\":\"Entangle\"},\"Attributes\":[],\"SourceFile\":\"c:/Users/Marco%20A/Desktop/Projects/QuantumComputing/Operations.qs\",\"Position\":{\"Item1\":26,\"Item2\":4},\"SymbolRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":19}},\"ArgumentTuple\":{\"Case\":\"QsTuple\",\"Fields\":[[{\"Case\":\"QsTupleItem\",\"Fields\":[{\"VariableName\":{\"Case\":\"ValidName\",\"Fields\":[\"Qubit1\"]},\"Type\":{\"Case\":\"Qubit\"},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":1,\"Column\":20},\"Item2\":{\"Line\":1,\"Column\":26}}}]},{\"Case\":\"QsTupleItem\",\"Fields\":[{\"VariableName\":{\"Case\":\"ValidName\",\"Fields\":[\"Qubit2\"]},\"Type\":{\"Case\":\"Qubit\"},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":1,\"Column\":36},\"Item2\":{\"Line\":1,\"Column\":42}}}]}]]},\"Signature\":{\"TypeParameters\":[],\"ArgumentType\":{\"Case\":\"TupleType\",\"Fields\":[[{\"Case\":\"Qubit\"},{\"Case\":\"Qubit\"}]]},\"ReturnType\":{\"Case\":\"UnitType\"},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}}},\"Documentation\":[]}")]
[assembly: SpecializationDeclaration("{\"Kind\":{\"Case\":\"QsBody\"},\"TypeArguments\":{\"Case\":\"Null\"},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}},\"Parent\":{\"Namespace\":\"QuantumComputing\",\"Name\":\"Entangle\"},\"Attributes\":[],\"SourceFile\":\"c:/Users/Marco%20A/Desktop/Projects/QuantumComputing/Operations.qs\",\"Position\":{\"Item1\":26,\"Item2\":4},\"HeaderRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":19}},\"Documentation\":[]}")]
[assembly: CallableDeclaration("{\"Kind\":{\"Case\":\"Operation\"},\"QualifiedName\":{\"Namespace\":\"QuantumComputing\",\"Name\":\"Encode\"},\"Attributes\":[],\"SourceFile\":\"c:/Users/Marco%20A/Desktop/Projects/QuantumComputing/Operations.qs\",\"Position\":{\"Item1\":31,\"Item2\":4},\"SymbolRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":17}},\"ArgumentTuple\":{\"Case\":\"QsTuple\",\"Fields\":[[{\"Case\":\"QsTupleItem\",\"Fields\":[{\"VariableName\":{\"Case\":\"ValidName\",\"Fields\":[\"Qubit1\"]},\"Type\":{\"Case\":\"Qubit\"},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":1,\"Column\":18},\"Item2\":{\"Line\":1,\"Column\":24}}}]},{\"Case\":\"QsTupleItem\",\"Fields\":[{\"VariableName\":{\"Case\":\"ValidName\",\"Fields\":[\"message\"]},\"Type\":{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Int\"}]},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":1,\"Column\":34},\"Item2\":{\"Line\":1,\"Column\":41}}}]}]]},\"Signature\":{\"TypeParameters\":[],\"ArgumentType\":{\"Case\":\"TupleType\",\"Fields\":[[{\"Case\":\"Qubit\"},{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Int\"}]}]]},\"ReturnType\":{\"Case\":\"UnitType\"},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}}},\"Documentation\":[]}")]
[assembly: SpecializationDeclaration("{\"Kind\":{\"Case\":\"QsBody\"},\"TypeArguments\":{\"Case\":\"Null\"},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}},\"Parent\":{\"Namespace\":\"QuantumComputing\",\"Name\":\"Encode\"},\"Attributes\":[],\"SourceFile\":\"c:/Users/Marco%20A/Desktop/Projects/QuantumComputing/Operations.qs\",\"Position\":{\"Item1\":31,\"Item2\":4},\"HeaderRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":17}},\"Documentation\":[]}")]
[assembly: CallableDeclaration("{\"Kind\":{\"Case\":\"Operation\"},\"QualifiedName\":{\"Namespace\":\"QuantumComputing\",\"Name\":\"Decode\"},\"Attributes\":[],\"SourceFile\":\"c:/Users/Marco%20A/Desktop/Projects/QuantumComputing/Operations.qs\",\"Position\":{\"Item1\":40,\"Item2\":4},\"SymbolRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":17}},\"ArgumentTuple\":{\"Case\":\"QsTuple\",\"Fields\":[[{\"Case\":\"QsTupleItem\",\"Fields\":[{\"VariableName\":{\"Case\":\"ValidName\",\"Fields\":[\"Qubit1\"]},\"Type\":{\"Case\":\"Qubit\"},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":1,\"Column\":18},\"Item2\":{\"Line\":1,\"Column\":24}}}]},{\"Case\":\"QsTupleItem\",\"Fields\":[{\"VariableName\":{\"Case\":\"ValidName\",\"Fields\":[\"Qubit2\"]},\"Type\":{\"Case\":\"Qubit\"},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":1,\"Column\":34},\"Item2\":{\"Line\":1,\"Column\":40}}}]}]]},\"Signature\":{\"TypeParameters\":[],\"ArgumentType\":{\"Case\":\"TupleType\",\"Fields\":[[{\"Case\":\"Qubit\"},{\"Case\":\"Qubit\"}]]},\"ReturnType\":{\"Case\":\"UnitType\"},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}}},\"Documentation\":[]}")]
[assembly: SpecializationDeclaration("{\"Kind\":{\"Case\":\"QsBody\"},\"TypeArguments\":{\"Case\":\"Null\"},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}},\"Parent\":{\"Namespace\":\"QuantumComputing\",\"Name\":\"Decode\"},\"Attributes\":[],\"SourceFile\":\"c:/Users/Marco%20A/Desktop/Projects/QuantumComputing/Operations.qs\",\"Position\":{\"Item1\":40,\"Item2\":4},\"HeaderRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":17}},\"Documentation\":[]}")]
[assembly: CallableDeclaration("{\"Kind\":{\"Case\":\"Operation\"},\"QualifiedName\":{\"Namespace\":\"QuantumComputing\",\"Name\":\"ShowMessage\"},\"Attributes\":[],\"SourceFile\":\"c:/Users/Marco%20A/Desktop/Projects/QuantumComputing/Operations.qs\",\"Position\":{\"Item1\":45,\"Item2\":4},\"SymbolRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":22}},\"ArgumentTuple\":{\"Case\":\"QsTuple\",\"Fields\":[[{\"Case\":\"QsTupleItem\",\"Fields\":[{\"VariableName\":{\"Case\":\"ValidName\",\"Fields\":[\"Qubit1\"]},\"Type\":{\"Case\":\"Qubit\"},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":1,\"Column\":23},\"Item2\":{\"Line\":1,\"Column\":29}}}]},{\"Case\":\"QsTupleItem\",\"Fields\":[{\"VariableName\":{\"Case\":\"ValidName\",\"Fields\":[\"Qubit2\"]},\"Type\":{\"Case\":\"Qubit\"},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":1,\"Column\":39},\"Item2\":{\"Line\":1,\"Column\":45}}}]}]]},\"Signature\":{\"TypeParameters\":[],\"ArgumentType\":{\"Case\":\"TupleType\",\"Fields\":[[{\"Case\":\"Qubit\"},{\"Case\":\"Qubit\"}]]},\"ReturnType\":{\"Case\":\"UnitType\"},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}}},\"Documentation\":[]}")]
[assembly: SpecializationDeclaration("{\"Kind\":{\"Case\":\"QsBody\"},\"TypeArguments\":{\"Case\":\"Null\"},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}},\"Parent\":{\"Namespace\":\"QuantumComputing\",\"Name\":\"ShowMessage\"},\"Attributes\":[],\"SourceFile\":\"c:/Users/Marco%20A/Desktop/Projects/QuantumComputing/Operations.qs\",\"Position\":{\"Item1\":45,\"Item2\":4},\"HeaderRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":22}},\"Documentation\":[]}")]
#line hidden
namespace QuantumComputing
{
    [SourceLocation("c:/Users/Marco%20A/Desktop/Projects/QuantumComputing/Operations.qs", OperationFunctor.Body, 7, 27)]
    public partial class HelloQ : Operation<QVoid, QVoid>, ICallable
    {
        public HelloQ(IOperationFactory m) : base(m)
        {
        }

        String ICallable.Name => "HelloQ";
        String ICallable.FullName => "QuantumComputing.HelloQ";
        protected ICallable<IQArray<Result>, Int64> MicrosoftQuantumConvertResultArrayAsInt
        {
            get;
            set;
        }

        protected Allocate Allocate
        {
            get;
            set;
        }

        protected IUnitary<Qubit> MicrosoftQuantumIntrinsicH
        {
            get;
            set;
        }

        protected ICallable<Qubit, Result> MicrosoftQuantumIntrinsicM
        {
            get;
            set;
        }

        protected ICallable<String, QVoid> MicrosoftQuantumIntrinsicMessage
        {
            get;
            set;
        }

        protected Release Release
        {
            get;
            set;
        }

        protected ICallable<Qubit, QVoid> MicrosoftQuantumIntrinsicReset
        {
            get;
            set;
        }

        protected ICallable<(Qubit,Qubit), QVoid> Decode
        {
            get;
            set;
        }

        protected ICallable<(Qubit,IQArray<Int64>), QVoid> Encode
        {
            get;
            set;
        }

        protected ICallable<(Qubit,Qubit), QVoid> Entangle
        {
            get;
            set;
        }

        public override Func<QVoid, QVoid> Body => (__in__) =>
        {
#line hidden
            {
#line 11 "c:/Users/Marco%20A/Desktop/Projects/QuantumComputing/Operations.qs"
                var (Q1,Q2,Bridge) = (Allocate.Apply(), Allocate.Apply(), Allocate.Apply());
#line hidden
                System.Runtime.ExceptionServices.ExceptionDispatchInfo __arg1__ = null;
                try
                {
#line 12 "c:/Users/Marco%20A/Desktop/Projects/QuantumComputing/Operations.qs"
                    MicrosoftQuantumIntrinsicH.Apply(Q1);
#line 13 "c:/Users/Marco%20A/Desktop/Projects/QuantumComputing/Operations.qs"
                    var initial = MicrosoftQuantumIntrinsicM.Apply(Q1);
#line 14 "c:/Users/Marco%20A/Desktop/Projects/QuantumComputing/Operations.qs"
                    MicrosoftQuantumIntrinsicMessage.Apply(String.Format("Q1 initially is at : {0}", initial));
#line 15 "c:/Users/Marco%20A/Desktop/Projects/QuantumComputing/Operations.qs"
                    Entangle.Apply((Bridge, Q2));
#line 16 "c:/Users/Marco%20A/Desktop/Projects/QuantumComputing/Operations.qs"
                    Decode.Apply((Q1, Bridge));
#line 17 "c:/Users/Marco%20A/Desktop/Projects/QuantumComputing/Operations.qs"
                    var place = (IQArray<Result>)new QArray<Result>(initial, MicrosoftQuantumIntrinsicM.Apply(Bridge));
#line 18 "c:/Users/Marco%20A/Desktop/Projects/QuantumComputing/Operations.qs"
                    MicrosoftQuantumIntrinsicMessage.Apply(String.Format("{0}", place));
#line 19 "c:/Users/Marco%20A/Desktop/Projects/QuantumComputing/Operations.qs"
                    var measured = (IQArray<Int64>)new QArray<Int64>(MicrosoftQuantumConvertResultArrayAsInt.Apply(new QArray<Result>(place[0L])), MicrosoftQuantumConvertResultArrayAsInt.Apply(new QArray<Result>(place[1L])));
#line 20 "c:/Users/Marco%20A/Desktop/Projects/QuantumComputing/Operations.qs"
                    Encode.Apply((Q2, measured));
#line 21 "c:/Users/Marco%20A/Desktop/Projects/QuantumComputing/Operations.qs"
                    var final = MicrosoftQuantumIntrinsicM.Apply(Q2);
#line 22 "c:/Users/Marco%20A/Desktop/Projects/QuantumComputing/Operations.qs"
                    MicrosoftQuantumIntrinsicMessage.Apply(String.Format("The measured state of Q2 : {0}", final));
#line 23 "c:/Users/Marco%20A/Desktop/Projects/QuantumComputing/Operations.qs"
                    MicrosoftQuantumIntrinsicReset.Apply(Q1);
#line 23 "c:/Users/Marco%20A/Desktop/Projects/QuantumComputing/Operations.qs"
                    MicrosoftQuantumIntrinsicReset.Apply(Q2);
#line 23 "c:/Users/Marco%20A/Desktop/Projects/QuantumComputing/Operations.qs"
                    MicrosoftQuantumIntrinsicReset.Apply(Bridge);
                }
#line hidden
                catch (Exception __arg2__)
                {
                    __arg1__ = System.Runtime.ExceptionServices.ExceptionDispatchInfo.Capture(__arg2__);
                    throw;
                }
#line hidden
                finally
                {
                    if (__arg1__ != null)
                    {
                        __arg1__.Throw();
                    }

#line hidden
                    Release.Apply(Q1);
#line hidden
                    Release.Apply(Q2);
#line hidden
                    Release.Apply(Bridge);
                }
            }

#line hidden
            return QVoid.Instance;
        }

        ;
        public override void Init()
        {
            this.MicrosoftQuantumConvertResultArrayAsInt = this.Factory.Get<ICallable<IQArray<Result>, Int64>>(typeof(Microsoft.Quantum.Convert.ResultArrayAsInt));
            this.Allocate = this.Factory.Get<Allocate>(typeof(Microsoft.Quantum.Intrinsic.Allocate));
            this.MicrosoftQuantumIntrinsicH = this.Factory.Get<IUnitary<Qubit>>(typeof(Microsoft.Quantum.Intrinsic.H));
            this.MicrosoftQuantumIntrinsicM = this.Factory.Get<ICallable<Qubit, Result>>(typeof(Microsoft.Quantum.Intrinsic.M));
            this.MicrosoftQuantumIntrinsicMessage = this.Factory.Get<ICallable<String, QVoid>>(typeof(Microsoft.Quantum.Intrinsic.Message));
            this.Release = this.Factory.Get<Release>(typeof(Microsoft.Quantum.Intrinsic.Release));
            this.MicrosoftQuantumIntrinsicReset = this.Factory.Get<ICallable<Qubit, QVoid>>(typeof(Microsoft.Quantum.Intrinsic.Reset));
            this.Decode = this.Factory.Get<ICallable<(Qubit,Qubit), QVoid>>(typeof(Decode));
            this.Encode = this.Factory.Get<ICallable<(Qubit,IQArray<Int64>), QVoid>>(typeof(Encode));
            this.Entangle = this.Factory.Get<ICallable<(Qubit,Qubit), QVoid>>(typeof(Entangle));
        }

        public override IApplyData __dataIn(QVoid data) => data;
        public override IApplyData __dataOut(QVoid data) => data;
        public static System.Threading.Tasks.Task<QVoid> Run(IOperationFactory __m__)
        {
            return __m__.Run<HelloQ, QVoid, QVoid>(QVoid.Instance);
        }
    }

    [SourceLocation("c:/Users/Marco%20A/Desktop/Projects/QuantumComputing/Operations.qs", OperationFunctor.Body, 27, 32)]
    public partial class Entangle : Operation<(Qubit,Qubit), QVoid>, ICallable
    {
        public Entangle(IOperationFactory m) : base(m)
        {
        }

        public class In : QTuple<(Qubit,Qubit)>, IApplyData
        {
            public In((Qubit,Qubit) data) : base(data)
            {
            }

            System.Collections.Generic.IEnumerable<Qubit> IApplyData.Qubits
            {
                get
                {
                    yield return Data.Item1;
                    yield return Data.Item2;
                }
            }
        }

        String ICallable.Name => "Entangle";
        String ICallable.FullName => "QuantumComputing.Entangle";
        protected IUnitary<(Qubit,Qubit)> MicrosoftQuantumIntrinsicCNOT
        {
            get;
            set;
        }

        protected IUnitary<Qubit> MicrosoftQuantumIntrinsicH
        {
            get;
            set;
        }

        public override Func<(Qubit,Qubit), QVoid> Body => (__in__) =>
        {
            var (Qubit1,Qubit2) = __in__;
#line 28 "c:/Users/Marco%20A/Desktop/Projects/QuantumComputing/Operations.qs"
            MicrosoftQuantumIntrinsicH.Apply(Qubit1);
#line 29 "c:/Users/Marco%20A/Desktop/Projects/QuantumComputing/Operations.qs"
            MicrosoftQuantumIntrinsicCNOT.Apply((Qubit1, Qubit2));
#line hidden
            return QVoid.Instance;
        }

        ;
        public override void Init()
        {
            this.MicrosoftQuantumIntrinsicCNOT = this.Factory.Get<IUnitary<(Qubit,Qubit)>>(typeof(Microsoft.Quantum.Intrinsic.CNOT));
            this.MicrosoftQuantumIntrinsicH = this.Factory.Get<IUnitary<Qubit>>(typeof(Microsoft.Quantum.Intrinsic.H));
        }

        public override IApplyData __dataIn((Qubit,Qubit) data) => new In(data);
        public override IApplyData __dataOut(QVoid data) => data;
        public static System.Threading.Tasks.Task<QVoid> Run(IOperationFactory __m__, Qubit Qubit1, Qubit Qubit2)
        {
            return __m__.Run<Entangle, (Qubit,Qubit), QVoid>((Qubit1, Qubit2));
        }
    }

    [SourceLocation("c:/Users/Marco%20A/Desktop/Projects/QuantumComputing/Operations.qs", OperationFunctor.Body, 32, 41)]
    public partial class Encode : Operation<(Qubit,IQArray<Int64>), QVoid>, ICallable
    {
        public Encode(IOperationFactory m) : base(m)
        {
        }

        public class In : QTuple<(Qubit,IQArray<Int64>)>, IApplyData
        {
            public In((Qubit,IQArray<Int64>) data) : base(data)
            {
            }

            System.Collections.Generic.IEnumerable<Qubit> IApplyData.Qubits
            {
                get
                {
                    yield return Data.Item1;
                }
            }
        }

        String ICallable.Name => "Encode";
        String ICallable.FullName => "QuantumComputing.Encode";
        protected IUnitary<Qubit> MicrosoftQuantumIntrinsicX
        {
            get;
            set;
        }

        protected IUnitary<Qubit> MicrosoftQuantumIntrinsicZ
        {
            get;
            set;
        }

        public override Func<(Qubit,IQArray<Int64>), QVoid> Body => (__in__) =>
        {
            var (Qubit1,message) = __in__;
#line 33 "c:/Users/Marco%20A/Desktop/Projects/QuantumComputing/Operations.qs"
            if ((message[0L] == 1L))
            {
#line 34 "c:/Users/Marco%20A/Desktop/Projects/QuantumComputing/Operations.qs"
                MicrosoftQuantumIntrinsicZ.Apply(Qubit1);
            }

#line 36 "c:/Users/Marco%20A/Desktop/Projects/QuantumComputing/Operations.qs"
            if ((message[1L] == 1L))
            {
#line 37 "c:/Users/Marco%20A/Desktop/Projects/QuantumComputing/Operations.qs"
                MicrosoftQuantumIntrinsicX.Apply(Qubit1);
            }

#line hidden
            return QVoid.Instance;
        }

        ;
        public override void Init()
        {
            this.MicrosoftQuantumIntrinsicX = this.Factory.Get<IUnitary<Qubit>>(typeof(Microsoft.Quantum.Intrinsic.X));
            this.MicrosoftQuantumIntrinsicZ = this.Factory.Get<IUnitary<Qubit>>(typeof(Microsoft.Quantum.Intrinsic.Z));
        }

        public override IApplyData __dataIn((Qubit,IQArray<Int64>) data) => new In(data);
        public override IApplyData __dataOut(QVoid data) => data;
        public static System.Threading.Tasks.Task<QVoid> Run(IOperationFactory __m__, Qubit Qubit1, IQArray<Int64> message)
        {
            return __m__.Run<Encode, (Qubit,IQArray<Int64>), QVoid>((Qubit1, message));
        }
    }

    [SourceLocation("c:/Users/Marco%20A/Desktop/Projects/QuantumComputing/Operations.qs", OperationFunctor.Body, 41, 46)]
    public partial class Decode : Operation<(Qubit,Qubit), QVoid>, ICallable
    {
        public Decode(IOperationFactory m) : base(m)
        {
        }

        public class In : QTuple<(Qubit,Qubit)>, IApplyData
        {
            public In((Qubit,Qubit) data) : base(data)
            {
            }

            System.Collections.Generic.IEnumerable<Qubit> IApplyData.Qubits
            {
                get
                {
                    yield return Data.Item1;
                    yield return Data.Item2;
                }
            }
        }

        String ICallable.Name => "Decode";
        String ICallable.FullName => "QuantumComputing.Decode";
        protected IUnitary<(Qubit,Qubit)> MicrosoftQuantumIntrinsicCNOT
        {
            get;
            set;
        }

        protected IUnitary<Qubit> MicrosoftQuantumIntrinsicH
        {
            get;
            set;
        }

        public override Func<(Qubit,Qubit), QVoid> Body => (__in__) =>
        {
            var (Qubit1,Qubit2) = __in__;
#line 42 "c:/Users/Marco%20A/Desktop/Projects/QuantumComputing/Operations.qs"
            MicrosoftQuantumIntrinsicCNOT.Apply((Qubit1, Qubit2));
#line 43 "c:/Users/Marco%20A/Desktop/Projects/QuantumComputing/Operations.qs"
            MicrosoftQuantumIntrinsicH.Apply(Qubit1);
#line hidden
            return QVoid.Instance;
        }

        ;
        public override void Init()
        {
            this.MicrosoftQuantumIntrinsicCNOT = this.Factory.Get<IUnitary<(Qubit,Qubit)>>(typeof(Microsoft.Quantum.Intrinsic.CNOT));
            this.MicrosoftQuantumIntrinsicH = this.Factory.Get<IUnitary<Qubit>>(typeof(Microsoft.Quantum.Intrinsic.H));
        }

        public override IApplyData __dataIn((Qubit,Qubit) data) => new In(data);
        public override IApplyData __dataOut(QVoid data) => data;
        public static System.Threading.Tasks.Task<QVoid> Run(IOperationFactory __m__, Qubit Qubit1, Qubit Qubit2)
        {
            return __m__.Run<Decode, (Qubit,Qubit), QVoid>((Qubit1, Qubit2));
        }
    }

    [SourceLocation("c:/Users/Marco%20A/Desktop/Projects/QuantumComputing/Operations.qs", OperationFunctor.Body, 46, -1)]
    public partial class ShowMessage : Operation<(Qubit,Qubit), QVoid>, ICallable
    {
        public ShowMessage(IOperationFactory m) : base(m)
        {
        }

        public class In : QTuple<(Qubit,Qubit)>, IApplyData
        {
            public In((Qubit,Qubit) data) : base(data)
            {
            }

            System.Collections.Generic.IEnumerable<Qubit> IApplyData.Qubits
            {
                get
                {
                    yield return Data.Item1;
                    yield return Data.Item2;
                }
            }
        }

        String ICallable.Name => "ShowMessage";
        String ICallable.FullName => "QuantumComputing.ShowMessage";
        protected ICallable<Qubit, Result> MicrosoftQuantumIntrinsicM
        {
            get;
            set;
        }

        protected ICallable<String, QVoid> MicrosoftQuantumIntrinsicMessage
        {
            get;
            set;
        }

        public override Func<(Qubit,Qubit), QVoid> Body => (__in__) =>
        {
            var (Qubit1,Qubit2) = __in__;
#line 47 "c:/Users/Marco%20A/Desktop/Projects/QuantumComputing/Operations.qs"
            var result = (IQArray<Result>)new QArray<Result>(MicrosoftQuantumIntrinsicM.Apply(Qubit1), MicrosoftQuantumIntrinsicM.Apply(Qubit2));
#line 48 "c:/Users/Marco%20A/Desktop/Projects/QuantumComputing/Operations.qs"
            MicrosoftQuantumIntrinsicMessage.Apply(String.Format("Result is : {0}", result));
#line hidden
            return QVoid.Instance;
        }

        ;
        public override void Init()
        {
            this.MicrosoftQuantumIntrinsicM = this.Factory.Get<ICallable<Qubit, Result>>(typeof(Microsoft.Quantum.Intrinsic.M));
            this.MicrosoftQuantumIntrinsicMessage = this.Factory.Get<ICallable<String, QVoid>>(typeof(Microsoft.Quantum.Intrinsic.Message));
        }

        public override IApplyData __dataIn((Qubit,Qubit) data) => new In(data);
        public override IApplyData __dataOut(QVoid data) => data;
        public static System.Threading.Tasks.Task<QVoid> Run(IOperationFactory __m__, Qubit Qubit1, Qubit Qubit2)
        {
            return __m__.Run<ShowMessage, (Qubit,Qubit), QVoid>((Qubit1, Qubit2));
        }
    }
}